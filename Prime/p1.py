{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.11.13","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[],"dockerImageVersionId":31089,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"def sum():\n     total=0\n     for i in range(2,12):\n         if i%2==0:\n             total+=i\n     print(total)\n\nsum() ","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","trusted":true,"execution":{"iopub.status.busy":"2025-09-09T11:06:31.711853Z","iopub.execute_input":"2025-09-09T11:06:31.712077Z","iopub.status.idle":"2025-09-09T11:06:31.721416Z","shell.execute_reply.started":"2025-09-09T11:06:31.712036Z","shell.execute_reply":"2025-09-09T11:06:31.720345Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"print(\"================Welcome to QuickBite=================\")\n\n\nmeals = ['Biryani','Chicken Curry','Paneer Tikka','French Fries','Cold Drink']\nprices = [150, 180, 160, 100, 50, 40]\n\nprint(\"========================= Menu========================\")\n\nprint(\"S.No\\t\\t\\tItem\\t\\t\\tPrice\")\nprint(\"-----------------------------------------------------\")\nprint(f\"1.\\t\\t\\t{meals[0]}\\t\\t\\t{prices[0]}\")\nprint(f\"2.\\t\\t\\t{meals[1]}\\t\\t{prices[1]}\")\nprint(f\"3.\\t\\t\\t{meals[2]}\\t\\t{prices[2]}\")\nprint(f\"4.\\t\\t\\t{meals[3]}\\t\\t{prices[3]}\")\nprint(f\"5.\\t\\t\\t{meals[4]}\\t\\t{prices[4]}\")\nprint(\"-----------------------------------------------------\")\n\nask = input(\"Do you want to book a meal? (yes/no): \")\n\nif ask.lower() == \"yes\":\n    print(\"Great! Let's get started with your order.\")\nelse:\n    print(\"No problem! Feel free to browse our menu anytime.\")\n\n\nsask = input(\"Which meal would you like to book? (Enter the meal name): \")\nif sask in meals:\n    index = meals.index(sask)\n    print(f\"You have selected {meals[index]} which costs {prices[index]}.\")\n    quantity = int(input(\"How many servings would you like to order? \"))\n    if quantity <= 60:\n        total_cost = prices[index] * quantity\n        print(f\"Your total cost for {quantity} servings of {meals[index]} is: {total_cost}\")\n        confirm = input(\"Do you want to confirm your order? (yes/no): \")\n        if confirm.lower() == \"yes\":\n            print(\"Thank you for your order! Your meal will be prepared shortly.\")\n        else:\n            print(\"Order cancelled. Feel free to order anytime!\")\nelse:   \n    print(\"Sorry, we don't have that meal on the menu.\")\n\nname = input(\"Please enter your name: \")\nmobile = input(\"Please enter your mobile number: \")\naddress = input(\"Please enter your address: \")\n\nprint(\"-----------------------------------------------------\")\nprint(\"Here is your order summary:\")\nprint(f\"Name: {name}\")\nprint(f\"Mobile: {mobile}\")\nprint(f\"Address: {address}\")\nprint(f\"Meal: {meals[index]}\")\nprint(f\"Quantity: {quantity}\")\nprint(f\"Total Cost: {total_cost}\")\nprint(\"-----------------------------------------------------\")\n\nprint(\"====================Payment Method===================\")\nprint(\"1. UPI ID\")\nprint(\"2. Cash on Delivery\")\npayment_method = input(\"Please select a payment method (1/2): \")\nnt method selected.\")\n\nprint(\"Your order has been placed successfully!\")\nprint(\"This order reaches you when company are going in top 10 in Noida!!\")\nprint(\"Thank you for using QuickBite!\")\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-09-09T19:26:46.787212Z","iopub.execute_input":"2025-09-09T19:26:46.787836Z","iopub.status.idle":"2025-09-09T19:27:23.447332Z","shell.execute_reply.started":"2025-09-09T19:26:46.787806Z","shell.execute_reply":"2025-09-09T19:27:23.446373Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"# Food Delivery CLI - Only if/elif\n# No else, no external libs, single file, super simple\n\nprint(\"=== Welcome to QuickBite CLI ===\")\nprint(\"Tip: Enter numbers for choices. Works best with whole numbers.\\n\")\n\nrunning = True\n\n# Fixed menu (IDs 1..12 for simple if/elif flow)\nitems = {\n    1: (\"Margherita Pizza\", 149),\n    2: (\"Farmhouse Pizza\", 219),\n    3: (\"Paneer Tikka Pizza\", 249),\n    4: (\"Classic Veg Burger\", 99),\n    5: (\"Cheese Burst Burger\", 129),\n    6: (\"Aloo Tikki Burger\", 89),\n    7: (\"Masala Fries\", 79),\n    8: (\"Peri Peri Fries\", 99),\n    9: (\"Cold Coffee\", 119),\n    10: (\"Iced Tea\", 99),\n    11: (\"Coke (300ml)\", 49),\n    12: (\"Water Bottle\", 25)\n}\n\ncart = []  # list of (name, price, qty)\n\ndef show_menu():\n    print(\"\\n--- MENU ---\")\n    print(\"PIZZA\")\n    print(\"  1) Margherita Pizza        â‚¹149\")\n    print(\"  2) Farmhouse Pizza         â‚¹219\")\n    print(\"  3) Paneer Tikka Pizza      â‚¹249\")\n    print(\"BURGERS\")\n    print(\"  4) Classic Veg Burger      â‚¹99\")\n    print(\"  5) Cheese Burst Burger     â‚¹129\")\n    print(\"  6) Aloo Tikki Burger       â‚¹89\")\n    print(\"SIDES\")\n    print(\"  7) Masala Fries            â‚¹79\")\n    print(\"  8) Peri Peri Fries         â‚¹99\")\n    print(\"DRINKS\")\n    print(\"  9) Cold Coffee             â‚¹119\")\n    print(\" 10) Iced Tea                â‚¹99\")\n    print(\" 11) Coke (300ml)            â‚¹49\")\n    print(\" 12) Water Bottle            â‚¹25\")\n\ndef add_to_cart(item_id, qty):\n    # Merge quantities if same item exists\n    i = 0\n    while i < len(cart):\n        name, price, existing_qty = cart[i]\n        if name == items[item_id][0]:\n            cart[i] = (name, price, existing_qty + qty)\n            return\n        i += 1\n    name, price = items[item_id]\n    cart.append((name, price, qty))\n\ndef show_cart():\n    print(\"\\n=== Your Cart ===\")\n    if len(cart) == 0:\n        print(\"Cart is empty.\")\n    elif len(cart) > 0:\n        total = 0\n        idx = 0\n        while idx < len(cart):\n            name, price, qty = cart[idx]\n            line_total = price * qty\n            total += line_total\n            print(f\"{idx+1}) {name} x{qty}  â‚¹{price} each  â†’ â‚¹{line_total}\")\n            idx += 1\n        print(f\"------------------\\nSubtotal: â‚¹{total}\")\n\ndef remove_from_cart(index_1_based):\n    if index_1_based >= 1 and index_1_based <= len(cart):\n        # remove by index\n        del cart[index_1_based - 1]\n    elif index_1_based < 1:\n        print(\"Invalid index (too small).\")\n    elif index_1_based > len(cart):\n        print(\"Invalid index (too large).\")\n\ndef checkout():\n    print(\"\\n=== Checkout ===\")\n    if len(cart) == 0:\n        print(\"Cart is empty. Add items before checkout.\")\n    elif len(cart) > 0:\n        subtotal = 0\n        i = 0\n        while i < len(cart):\n            name, price, qty = cart[i]\n            line_total = price * qty\n            subtotal += line_total\n            i += 1\n        delivery_fee = 29 if subtotal < 299 else 0\n        gst = int(round(subtotal * 0.05))\n        grand_total = subtotal + delivery_fee + gst\n\n        print(f\"Subtotal     : â‚¹{subtotal}\")\n        print(f\"Delivery Fee : â‚¹{delivery_fee} (â‚¹0 if subtotal â‰¥ â‚¹299)\")\n        print(f\"GST (5%)     : â‚¹{gst}\")\n        print(\"---------------------------\")\n        print(f\"Grand Total  : â‚¹{grand_total}\")\n\n        confirm = input(\"Confirm order? (y/n): \").strip().lower()\n        if confirm == \"y\":\n            print(\"Order placed! ðŸŽ‰ Your food is on the way.\")\n            cart.clear()\n        elif confirm == \"n\":\n            print(\"Checkout cancelled.\")\n        elif confirm != \"y\" and confirm != \"n\":\n            print(\"Invalid choice. Returning to main menu.\")\n\ndef handle_add_flow():\n    show_menu()\n    raw_id = input(\"\\nEnter item number (1-12): \").strip()\n    if raw_id.isdigit():\n        item_id = int(raw_id)\n        if item_id >= 1 and item_id <= 12:\n            raw_qty = input(\"Enter quantity (1-20): \").strip()\n            if raw_qty.isdigit():\n                qty = int(raw_qty)\n                if qty >= 1 and qty <= 20:\n                    add_to_cart(item_id, qty)\n                    name, price = items[item_id]\n                    print(f\"Added: {name} x{qty} (â‚¹{price} each)\")\n                elif qty < 1:\n                    print(\"Quantity must be at least 1.\")\n                elif qty > 20:\n                    print(\"Max quantity per item is 20.\")\n            elif not raw_qty.isdigit():\n                print(\"Quantity must be a number.\")\n        elif item_id < 1 or item_id > 12:\n            print(\"Invalid item number.\")\n    elif not raw_id.isdigit():\n        print(\"Item number must be a number.\")\n\ndef handle_remove_flow():\n    if len(cart) == 0:\n        print(\"\\nCart is empty. Nothing to remove.\")\n    elif len(cart) > 0:\n        show_cart()\n        raw_idx = input(\"Enter cart item number to remove: \").strip()\n        if raw_idx.isdigit():\n            idx = int(raw_idx)\n            remove_from_cart(idx)\n            print(\"Updated cart:\")\n            show_cart()\n        elif not raw_idx.isdigit():\n            print(\"Index must be a number.\")\n\n# Main loop\nwhile running:\n    print(\"\\n=== Main Menu ===\")\n    print(\"1) View Menu\")\n    print(\"2) Add Item to Cart\")\n    print(\"3) View Cart\")\n    print(\"4) Remove Item from Cart\")\n    print(\"5) Checkout\")\n    print(\"6) Exit\")\n\n    choice = input(\"Choose an option: \").strip()\n\n    if choice == \"1\":\n        show_menu()\n    elif choice == \"2\":\n        handle_add_flow()\n    elif choice == \"3\":\n        show_cart()\n    elif choice == \"4\":\n        handle_remove_flow()\n    elif choice == \"5\":\n        checkout()\n    elif choice == \"6\":\n        print(\"Thanks for using QuickBite CLI. Goodbye!\")\n        running = False\n    elif choice != \"1\" and choice != \"2\" and choice != \"3\" and choice != \"4\" and choice != \"5\" and choice != \"6\":\n        print(\"Invalid choice. Please pick from 1-6.\")","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-09-09T11:15:09.357610Z","iopub.execute_input":"2025-09-09T11:15:09.358515Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"print(\"Kah ho \")","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-09-09T19:26:35.547100Z","iopub.execute_input":"2025-09-09T19:26:35.547435Z","iopub.status.idle":"2025-09-09T19:26:35.558702Z","shell.execute_reply.started":"2025-09-09T19:26:35.547404Z","shell.execute_reply":"2025-09-09T19:26:35.557394Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"# Euclidean Algorithm (Repeated Subtraction Method)\n\n# The idea:\n# To find the HCF (highest common factor) of two numbers a and b:\n\n# Compare a and b.\n\n# Subtract the smaller number from the larger number.\n\n# Replace the larger number with the result of subtraction.\n\n# Repeat steps 1â€“3 until both numbers become equal.\n\n# That number is the HCF.\n\nnum1 = int(input(\"Enter the First number :\"))\nnum2 = int(input(\"Enter the Second number :\"))\na = num1\nb = num2\n\nwhile num1 != num2:\n    if num1 > num2:\n        num1 -= num2\n    else:\n        num2 -= num1\n\nprint(\"Hcf of\", a, \"and\", b, \"is\", num1)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-09-25T20:35:31.524609Z","iopub.execute_input":"2025-09-25T20:35:31.524933Z","iopub.status.idle":"2025-09-25T20:35:38.535347Z","shell.execute_reply.started":"2025-09-25T20:35:31.524913Z","shell.execute_reply":"2025-09-25T20:35:38.534289Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"","metadata":{"trusted":true},"outputs":[],"execution_count":null}]}